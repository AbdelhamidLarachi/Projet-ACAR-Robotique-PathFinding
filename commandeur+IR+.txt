#include "Grove_I2C_Motor_Driver.h"
#include <Wire.h>
#define I2C_ADDRESS 0x0f

const int capteurGauche = 4;
const int capteurCentre = 3;
const int capteurDroit = 6;
bool etatCapteurGauche;
bool etatCapteurCentre;
bool etatCapteurDroit;
void setup()
{
  // put your setup code here, to run once:
  Serial.begin(9600);
  Motor.begin(I2C_ADDRESS);
  pinMode(capteurGauche, INPUT);
  pinMode(capteurCentre, INPUT);
  pinMode(capteurDroit, INPUT);
}
void loop()
{
  // put your main code here, to run repeatedly:
  etatCapteurGauche = digitalRead(capteurGauche);
  etatCapteurCentre = digitalRead(capteurCentre);
  etatCapteurDroit = digitalRead(capteurDroit);
  if(etatCapteurCentre) //Si le capteur du centre détecte du noir
  {
    if ((etatCapteurGauche) && (!etatCapteurDroit)) //S'il y a du noir à gauche et du blanc à droite, tourner à gauche
    {
      Motor.stop(MOTOR1);
      Motor.speed(MOTOR2, 100);

      Serial.println("Tourner à gauche");
    }
    else if ((!etatCapteurGauche) && (etatCapteurDroit)) //S'il y a du blanc à gauche et du noir à droite, tourner à droite
    {
       Motor.speed(MOTOR1, -100);
      Motor.stop(MOTOR2);
      Serial.println("Tourner à droite");
    }
    else //Si les conditions plus haut ne s'appliquent pas, continuer tout droit
    {
      Motor.speed(MOTOR1, -100);
      Motor.speed(MOTOR2, 100);
      Serial.println("Continuer tout droit");
    }
  }
  else //Si le capteur du centre détecte du blanc
  {
    if ((etatCapteurGauche) && (!etatCapteurDroit)) //S'il y a du noir à gauche et du blanc à droite, tourner à gauche
    {
      Motor.stop(MOTOR1);
      Motor.speed(MOTOR2, 100);
      Serial.println("Tourner à gauche");
    }
    else if ((!etatCapteurGauche) && (etatCapteurDroit)) //S'il y a du blanc à gauche et du noir à droite, tourner à droite
    {
       Motor.speed(MOTOR1, -100);
      Motor.stop(MOTOR2);
      Serial.println("Tourner à droite");
    }
    else //Si les conditions plus hautdne s'appliquent pas, reculer
    {

      Motor.stop(MOTOR1);
      Motor.stop(MOTOR2);
    }
  }
  delay(1000);
}
